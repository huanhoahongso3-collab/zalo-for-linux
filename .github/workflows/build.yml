name: Build Zalo for Linux

on:
  schedule:
    - cron: '0 0 * * *'
  workflow_dispatch:
    inputs:
      zalo_version:
        description: 'Zalo Version (leave empty for latest)'
        required: false
        default: ''
        type: string
      zadark_version:
        description: 'ZaDark Version/Tag/Commit (leave empty for latest)'
        required: false
        default: ''
        type: string

permissions:
  contents: write

jobs:
  build:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive

    - name: Update ZaDark submodule
      run: git submodule update --remote plugins/zadark

    - name: Install Flatpak build tools
      run: |
        sudo apt-get update
        sudo apt-get install -y flatpak flatpak-builder appstream

    - name: Add Flathub remote + runtimes
      run: |
        flatpak remote-add --if-not-exists flathub https://flathub.org/repo/flathub.flatpakrepo
        flatpak install -y flathub org.freedesktop.Platform//23.08 org.freedesktop.Sdk//23.08

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Cache Electron binaries
      uses: actions/cache@v3
      with:
        path: ~/.cache/electron
        key: ${{ runner.os }}-electron-${{ hashFiles('package-lock.json') }}
        restore-keys: |
          ${{ runner.os }}-electron-

    - name: Install Node.js dependencies
      run: npm ci --prefer-offline --no-audit

    - name: Setup and Build
      id: build
      env:
        CI: true
        ZALO_VERSION: ${{ github.event.inputs.zalo_version }}
        ZADARK_VERSION: ${{ github.event.inputs.zadark_version }}
        GH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        GITHUB_REPOSITORY: ${{ github.repository }}
      run: |
        npm run setup
        npm run build

    # -------- Debian Packages --------
    - name: Build Debian packages
      run: |
        mkdir -p dist

        # Original
        mkdir -p deb/usr/bin
        cp "${{ steps.build.outputs.original_appimage_file }}" deb/usr/bin/zalo
        mkdir -p deb/DEBIAN
        cat > deb/DEBIAN/control <<EOF
        Package: zalo
        Version: ${{ steps.build.outputs.zalo_version }}
        Section: utils
        Priority: optional
        Architecture: amd64
        Maintainer: Zalo Linux Build <noreply@example.com>
        Description: Zalo Desktop client for Linux
         Original build.
        EOF
        echo -e '#!/bin/sh\nchmod +x /usr/bin/zalo' > deb/DEBIAN/postinst
        chmod 755 deb/DEBIAN/postinst
        dpkg-deb --build deb "dist/zalo_${{ steps.build.outputs.zalo_version }}.deb"
        rm -rf deb

        # ZaDark
        mkdir -p deb/usr/bin
        cp "${{ steps.build.outputs.zadark_appimage_file }}" deb/usr/bin/zalo
        mkdir -p deb/DEBIAN
        cat > deb/DEBIAN/control <<EOF
        Package: zalo-zadark
        Version: ${{ steps.build.outputs.zalo_version }}
        Section: utils
        Priority: optional
        Architecture: amd64
        Maintainer: Zalo Linux Build <noreply@example.com>
        Description: Zalo Desktop client with ZaDark theme
        EOF
        echo -e '#!/bin/sh\nchmod +x /usr/bin/zalo' > deb/DEBIAN/postinst
        chmod 755 deb/DEBIAN/postinst
        dpkg-deb --build deb "dist/zalo-zadark_${{ steps.build.outputs.zalo_version }}.deb"
        rm -rf deb

    # -------- Flatpak Bundles --------
    - name: Build Flatpak packages
      run: |
        mkdir -p dist

        # Original
        cat > manifest-original.json <<EOF
        {
          "app-id": "vn.zalo.Zalo",
          "runtime": "org.freedesktop.Platform",
          "runtime-version": "23.08",
          "sdk": "org.freedesktop.Sdk",
          "command": "zalo",
          "modules": [
            {
              "name": "zalo",
              "buildsystem": "simple",
              "build-commands": [
                "install -Dm755 ${{ steps.build.outputs.original_appimage_file }} /app/bin/zalo"
              ]
            }
          ]
        }
        EOF
        flatpak-builder --force-clean --install-deps-from=flathub build-dir manifest-original.json
        flatpak build-export repo build-dir
        flatpak build-bundle repo "dist/zalo-${{ steps.build.outputs.zalo_version }}.flatpak" vn.zalo.Zalo

        # ZaDark
        cat > manifest-zadark.json <<EOF
        {
          "app-id": "vn.zalo.ZaloZaDark",
          "runtime": "org.freedesktop.Platform",
          "runtime-version": "23.08",
          "sdk": "org.freedesktop.Sdk",
          "command": "zalo",
          "modules": [
            {
              "name": "zalo",
              "buildsystem": "simple",
              "build-commands": [
                "install -Dm755 ${{ steps.build.outputs.zadark_appimage_file }} /app/bin/zalo"
              ]
            }
          ]
        }
        EOF
        flatpak-builder --force-clean --install-deps-from=flathub build-dir manifest-zadark.json
        flatpak build-export repo build-dir
        flatpak build-bundle repo "dist/zalo-zadark-${{ steps.build.outputs.zalo_version }}.flatpak" vn.zalo.ZaloZaDark

    # -------- Upload Artifacts --------
    - name: Upload all artifacts
      uses: actions/upload-artifact@v4
      with:
        name: zalo-dist
        path: dist/*

    # -------- Release --------
    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ steps.build.outputs.zalo_version }}
        name: Zalo v${{ steps.build.outputs.zalo_version }}
        body: |
          ## 🚀 How to use

          ### AppImage
          ```bash
          chmod +x Zalo-*.AppImage
          ./Zalo-*.AppImage
          ```

          ### Debian
          ```bash
          sudo dpkg -i zalo_*.deb
          sudo dpkg -i zalo-zadark_*.deb
          ```

          ### Flatpak
          ```bash
          flatpak install --user --bundle zalo-*.flatpak
          flatpak install --user --bundle zalo-zadark-*.flatpak
          ```

          ## 📋 System Requirements
          - Linux x64
          - GLIBC 2.28+

          ## 🐛 Issues & Support
          Please report issues in the [GitHub Issues](https://github.com/${{ github.repository }}/issues).
        files: |
          ${{ steps.build.outputs.original_appimage_file }}
          ${{ steps.build.outputs.zadark_appimage_file }}
          dist/*.deb
          dist/*.flatpak
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
